#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
class SQLFormatter < Racc::Parser

module_eval(<<'...end sql_formatter.y/module_eval...', 'sql_formatter.y', 11)

  def initialize
    @parsed_sql = []
  end

  def parse(str)
    @q = []
    until str.empty?
      case str
      when /^\s+/
      when /^SELECT/i
        @q.push [:SELECT, $&]
      when /^\*|^.+(?=\s+FROM)/i
        @q.push [:SELECT_LIST, $&]
      when /^FROM.+/i
        @q.push [:TABLE_EXPRESSION, $&]
      end
      str = $'
    end
    @q.push [false, '$end']
    @parsed_sql = do_parse
  end

  def next_token
    @q.shift
  end

  def parsed_sql
    @parsed_sql
  end

  def format(sql_arr=parsed_sql, i=0)
    sql_arr.each do |e|
      if e.is_a?(Array)
        i += i + 2
        format(e, i)
      else
        puts " " * i + e
      end
    end
  end

...end sql_formatter.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     2,     3,     5,     6,     8 ]

racc_action_check = [
     0,     1,     2,     3,     4 ]

racc_action_pointer = [
    -2,     1,    -1,     3,     0,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -4,    -4,    -4,    -4,    -4,    -2,     9,    -1,    -3 ]

racc_goto_table = [
     1,     4,     7 ]

racc_goto_check = [
     1,     2,     3 ]

racc_goto_pointer = [
   nil,     0,    -1,    -2 ]

racc_goto_default = [
   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 6, :_reduce_1,
  1, 7, :_reduce_none,
  1, 8, :_reduce_none ]

racc_reduce_n = 4

racc_shift_n = 9

racc_token_table = {
  false => 0,
  :error => 1,
  :SELECT => 2,
  :SELECT_LIST => 3,
  :TABLE_EXPRESSION => 4 }

racc_nt_base = 5

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SELECT",
  "SELECT_LIST",
  "TABLE_EXPRESSION",
  "$start",
  "query_expression",
  "select_list",
  "table_expression" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'sql_formatter.y', 2)
  def _reduce_1(val, _values, result)
    result = [val[0], [val[1], val[2]]]
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class SQLFormatter


